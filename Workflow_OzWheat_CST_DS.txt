Workflow for Team OZWHEAT (Emmett & Gordon)

1.Working Together
    Directory Structure		DONE
    2016_OzWheat_CST_DS
        Raw_Data (on Bowen, read only files so they willnot be corrupted)
        Scripts_Python (individuals home on Pearcey)
        Scripts_R (individuals home on Pearcey)
        Output (maybe large file size so use Bowen //osm/CBR/AF_DATASCHOOL/Output/2019OZwheat_EG)

    Setup GitHub repository, for version control.		DONE
    One person create GitHub Repository and invite other person.
    Other person then clone it to the home in Pearcey.

    Create Readme file.		DONE
    This will be updated as we go. 
    Containing everything that is needed to understand dataset & scripts.

2. Metadata
   Reading to understand FASTQ format.
   Reading to understand how to read file.gz (zcat, zgrep, 7zip?)
   Decide what metatdat is needed from sample.txt, .csv file & squence headers.
   Create Script (Python or R?) to pull this metadata into a file to form a
   tidy data frame with columns seperated by 'tab' characters.

      EL notes: 3 steps:  1. Extract first line of the fastq files for metadata and the file name (Python, EL) DONE
                          2. Extract the metadata from the file names keeping the file name, index sequences and rep number (R, EL), DONE
                          3. Knit the two files together in a .csv using the file names so the file will contain the index sequence, rep, file name and the metadata from the header row (R), NOT DONE
                          4. Extract the data from the .csv file supplied to the vendor so that the index sequence, sample ID (CSIRO) and the treatment are kept (R, GM), DONE
                          5. Knit the step 4 file with the step 3 file with the index sequence into a .csv file (R), NOT DONE






3. Process
   Reading to understand Fastqc.
   Trial run; start in pearcey, load Fastqc, run from command line,look at output.
   Understand what Fastqc output looks like.
   Delete this trial output.
   Put command to run a single file inside batch script.
   Submit your script to queue.
   Check status of your job submission.
   When run completed, check output.
   Modify your script to run on ALL your fastqc files.
   (consider regular expressions, fastqc command flags to increase the 
number of files processed at once, for loops, array jobs).

4. Align
    Align the sequence reads to a reference genome.
    Compare the sequence of 100 to entire oragnism genome, & work out where 
it came from.
    Produce table of counts along genome.
    Download uo-to-date reference genome from NCBI Genome database.
    Read up on STAR & HiSAT2.
    Create scripts to process, as in 3 above.

5. Count

6. Visualisation-challenge exercise

7. Parameter sweep-stretch exercise
	



